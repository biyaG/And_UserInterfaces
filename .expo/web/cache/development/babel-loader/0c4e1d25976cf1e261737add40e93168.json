{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/biya/Desktop/Passenger/components/DestinationButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Feather from \"@expo/vector-icons/Feather\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Directions } from 'react-native-gesture-handler';\nvar WIDTH = Dimensions.get('window').width;\n\nvar DestinationButton = function (_React$Component) {\n  _inherits(DestinationButton, _React$Component);\n\n  var _super = _createSuper(DestinationButton);\n\n  function DestinationButton() {\n    var _this;\n\n    _classCallCheck(this, DestinationButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visibility: false,\n      visibilitycal: false,\n      DateDisplay: \"\",\n      CalDisplay: \"\"\n    };\n\n    _this.handleConfirm = function (date) {\n      _this.setState({\n        visibility: false,\n        DateDisplay: date.toUTCString()\n      });\n    };\n\n    _this.onPressCancel = function () {\n      _this.setState({\n        visibility: false\n      });\n    };\n\n    _this.onPressButton = function () {\n      _this.setState({\n        visibility: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DestinationButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.whereTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(Feather.Button, {\n        name: \"calendar\",\n        color: \"#545454\",\n        size: 25,\n        backgroundColor: \"white\",\n        onPress: this.onPressButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), React.createElement(DateTimePickerModal, {\n        isVisible: this.state.visibility,\n        onConfirm: this.handleConfirm,\n        onCancel: this.onPressCancel,\n        mode: \"datetime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Where do you want to go?\",\n        style: styles.textInput1,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return handlePasswordChange(val);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handleValidPassword(e.nativeEvent.text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      })), React.createElement(TextInput, {\n        placeholder: \"Pick up Location\",\n        style: styles.textInput,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(val) {\n          return handlePasswordChange(val);\n        },\n        onEndEditing: function onEndEditing(e) {\n          return handleValidPassword(e.nativeEvent.text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DestinationButton;\n}(React.Component);\n\nexport { DestinationButton as default };\nvar styles = StyleSheet.create({\n  container: {\n    width: 270,\n    top: 160,\n    paddingTop: 20,\n    paddingLeft: 20,\n    borderRadius: 2,\n    backgroundColor: 'white',\n    shadowColor: '#000',\n    elevation: 7,\n    shadowRadius: 5,\n    shadowOpacity: 1.0\n  },\n  whereTo: {\n    flexDirection: 'row',\n    borderBottomWidth: 2,\n    borderBottomColor: '#f2f2f5',\n    paddingBottom: 5\n  },\n  textInput: {\n    marginBottom: 25,\n    paddingTop: 10,\n    alignSelf: 'center'\n  },\n  Button: {\n    backgroundColor: \"white\"\n  }\n});","map":{"version":3,"sources":["/home/biya/Desktop/Passenger/components/DestinationButton.js"],"names":["React","Ionicons","Feather","DateTimePickerModal","Directions","WIDTH","Dimensions","get","width","DestinationButton","state","visibility","visibilitycal","DateDisplay","CalDisplay","handleConfirm","date","setState","toUTCString","onPressCancel","onPressButton","styles","container","whereTo","textInput1","val","handlePasswordChange","e","handleValidPassword","nativeEvent","text","textInput","Component","StyleSheet","create","top","paddingTop","paddingLeft","borderRadius","backgroundColor","shadowColor","elevation","shadowRadius","shadowOpacity","flexDirection","borderBottomWidth","borderBottomColor","paddingBottom","marginBottom","alignSelf","Button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport{\n    StyleSheet,\n    Text,\n    View,\n    Dimensions,\n    TouchableOpacity,\n    TextInput\n   \n}from 'react-native';\n\nimport{Ionicons} from '@expo/vector-icons';\nimport Feather from 'react-native-vector-icons/Feather';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { Directions } from 'react-native-gesture-handler';\n\n\nconst WIDTH = Dimensions.get('window').width;\n// export const DestinationButton = function(props){\nexport default class DestinationButton extends React.Component{\n    state={\n        visibility:false,\n        visibilitycal:false,\n        DateDisplay:\"\",\n        CalDisplay:\"\"\n      }\n      handleConfirm=(date)=>{\n        this.setState({visibility:false,\n          DateDisplay:date.toUTCString()})\n      }\n      onPressCancel=()=>{\n        this.setState({visibility:false})\n      }\n      onPressButton=()=>{\n        this.setState({visibility:true})\n      }\n      \nrender(){\n    return(\n        <View style = {styles.container}>\n        {/* <View style={styles.leftCol}> */}\n        <View style={styles.whereTo}>\n        <Feather.Button \n                    name=\"calendar\"\n                    color=\"#545454\"\n                    size={25}\n                    backgroundColor=\"white\"\n                    onPress={this.onPressButton}\n                />\n                <DateTimePickerModal\n      isVisible={this.state.visibility}\n      onConfirm={this.handleConfirm}\n      onCancel={this.onPressCancel}\n      mode=\"datetime\"\n      />\n            <TextInput \n                    placeholder=\"Where do you want to go?\"\n                    //secureTextEntry={data.secureTextEntry ? true : false}\n                    style={styles.textInput1}\n                    autoCapitalize=\"none\"\n                    onChangeText={(val) => handlePasswordChange(val)}\n                    onEndEditing={(e)=>handleValidPassword(e.nativeEvent.text)}\n                />\n\n            </View>\n    \n     \n                \n                <TextInput \n                    placeholder=\"Pick up Location\"\n                    //secureTextEntry={data.secureTextEntry ? true : false}\n                    style={styles.textInput}\n                    autoCapitalize=\"none\"\n                    onChangeText={(val) => handlePasswordChange(val)}\n                    onEndEditing={(e)=>handleValidPassword(e.nativeEvent.text)}\n                />\n\n             \n                \n            {/* </View> */}\n       \n        </View>\n    )\n}\n}\n\nconst styles = StyleSheet.create({\n    container:{\n        // zIndex:9,\n        //position:'absolute',\n        width:270,\n        top:160,\n        paddingTop:20,\n        paddingLeft:20,\n\n        // flexDirection:'column',\n        // width:(WIDTH-80),\n        // height:80,\n        // top:50,\n        // left:45,\n        borderRadius:2,\n        backgroundColor:'white',\n        //alignItems:'flex-start',\n        shadowColor:'#000',\n        elevation:7,\n        shadowRadius:5,\n        shadowOpacity:1.0,\n    },\n    whereTo:{\n        flexDirection: 'row',\n        borderBottomWidth: 2,\n        borderBottomColor: '#f2f2f5',\n        paddingBottom:5,\n    },\n    textInput:{\n      //width:150,\n      \n      marginBottom:25,\n      paddingTop:10,\n      alignSelf:'center',\n      \n    },\n   \n    Button:{\n        backgroundColor:\"white\",\n\n    }\n})"]},"metadata":{},"sourceType":"module"}